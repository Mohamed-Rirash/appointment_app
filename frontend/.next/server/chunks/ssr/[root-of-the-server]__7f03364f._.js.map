{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/components/app-sidebar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AppSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppSidebar() from the server but AppSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/app-sidebar.tsx <module evaluation>\",\n    \"AppSidebar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,uXAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,4DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 18, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/components/app-sidebar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const AppSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call AppSidebar() from the server but AppSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/app-sidebar.tsx\",\n    \"AppSidebar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;AACO,MAAM,aAAa,IAAA,uXAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,wCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 32, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/components/ui/avatar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx <module evaluation>\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx <module evaluation>\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,uXAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,0DACA;AAEG,MAAM,iBAAiB,IAAA,uXAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,0DACA;AAEG,MAAM,cAAc,IAAA,uXAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,0DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 64, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/components/ui/avatar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Avatar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Avatar() from the server but Avatar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx\",\n    \"Avatar\",\n);\nexport const AvatarFallback = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarFallback() from the server but AvatarFallback is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx\",\n    \"AvatarFallback\",\n);\nexport const AvatarImage = registerClientReference(\n    function() { throw new Error(\"Attempted to call AvatarImage() from the server but AvatarImage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/avatar.tsx\",\n    \"AvatarImage\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;AACvE;;AACO,MAAM,SAAS,IAAA,uXAAuB,EACzC;IAAa,MAAM,IAAI,MAAM;AAA4N,GACzP,sCACA;AAEG,MAAM,iBAAiB,IAAA,uXAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,sCACA;AAEG,MAAM,cAAc,IAAA,uXAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,sCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 88, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 96, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/fuctions/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\r\nimport { twMerge } from \"tailwind-merge\"\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(inputs))\r\n}\r\n"],"names":[],"mappings":";;;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,oOAAO,EAAC,IAAA,8LAAI,EAAC;AACtB","debugId":null}},
    {"offset": {"line": 111, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { Slot } from \"@radix-ui/react-slot\";\r\nimport { cva, type VariantProps } from \"class-variance-authority\";\r\n\r\nimport { cn } from \"@/fuctions/utils\";\r\n\r\nconst buttonVariants = cva(\r\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\r\n  {\r\n    variants: {\r\n      variant: {\r\n        default:\r\n          \"bg-brand text-primary-foreground shadow-xs hover:bg-primary/90\",\r\n        destructive:\r\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\r\n        outline:\r\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\r\n        secondary:\r\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\r\n        ghost:\r\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\r\n        link: \"text-primary underline-offset-4 hover:underline\",\r\n      },\r\n      size: {\r\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\r\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\r\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\r\n        icon: \"size-9\",\r\n      },\r\n    },\r\n    defaultVariants: {\r\n      variant: \"default\",\r\n      size: \"default\",\r\n    },\r\n  }\r\n);\r\n\r\nfunction Button({\r\n  className,\r\n  variant,\r\n  size,\r\n  asChild = false,\r\n  ...props\r\n}: React.ComponentProps<\"button\"> &\r\n  VariantProps<typeof buttonVariants> & {\r\n    asChild?: boolean;\r\n  }) {\r\n  const Comp = asChild ? Slot : \"button\";\r\n\r\n  return (\r\n    <Comp\r\n      data-slot=\"button\"\r\n      className={cn(buttonVariants({ variant, size, className }))}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n\r\nexport { Button, buttonVariants };\r\n"],"names":[],"mappings":";;;;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,IAAA,kPAAG,EACxB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,6SAAI,GAAG;IAE9B,qBACE,6VAAC;QACC,aAAU;QACV,WAAW,IAAA,uHAAE,EAAC,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 168, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/components/ui/dropdown-menu.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx <module evaluation>\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,uXAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,iEACA;AAEG,MAAM,2BAA2B,IAAA,uXAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,iEACA;AAEG,MAAM,sBAAsB,IAAA,uXAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iEACA;AAEG,MAAM,oBAAoB,IAAA,uXAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iEACA;AAEG,MAAM,mBAAmB,IAAA,uXAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,iEACA;AAEG,MAAM,oBAAoB,IAAA,uXAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,iEACA;AAEG,MAAM,qBAAqB,IAAA,uXAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,iEACA;AAEG,MAAM,yBAAyB,IAAA,uXAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iEACA;AAEG,MAAM,wBAAwB,IAAA,uXAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iEACA;AAEG,MAAM,wBAAwB,IAAA,uXAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,iEACA;AAEG,MAAM,uBAAuB,IAAA,uXAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,iEACA;AAEG,MAAM,kBAAkB,IAAA,uXAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,iEACA;AAEG,MAAM,yBAAyB,IAAA,uXAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iEACA;AAEG,MAAM,yBAAyB,IAAA,uXAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,iEACA;AAEG,MAAM,sBAAsB,IAAA,uXAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,iEACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 252, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/components/ui/dropdown-menu.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const DropdownMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenu() from the server but DropdownMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenu\",\n);\nexport const DropdownMenuCheckboxItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuCheckboxItem() from the server but DropdownMenuCheckboxItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuCheckboxItem\",\n);\nexport const DropdownMenuContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuContent() from the server but DropdownMenuContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuContent\",\n);\nexport const DropdownMenuGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuGroup() from the server but DropdownMenuGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuGroup\",\n);\nexport const DropdownMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuItem() from the server but DropdownMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuItem\",\n);\nexport const DropdownMenuLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuLabel() from the server but DropdownMenuLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuLabel\",\n);\nexport const DropdownMenuPortal = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuPortal() from the server but DropdownMenuPortal is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuPortal\",\n);\nexport const DropdownMenuRadioGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioGroup() from the server but DropdownMenuRadioGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioGroup\",\n);\nexport const DropdownMenuRadioItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuRadioItem() from the server but DropdownMenuRadioItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuRadioItem\",\n);\nexport const DropdownMenuSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSeparator() from the server but DropdownMenuSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSeparator\",\n);\nexport const DropdownMenuShortcut = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuShortcut() from the server but DropdownMenuShortcut is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuShortcut\",\n);\nexport const DropdownMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSub() from the server but DropdownMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSub\",\n);\nexport const DropdownMenuSubContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubContent() from the server but DropdownMenuSubContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubContent\",\n);\nexport const DropdownMenuSubTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuSubTrigger() from the server but DropdownMenuSubTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuSubTrigger\",\n);\nexport const DropdownMenuTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call DropdownMenuTrigger() from the server but DropdownMenuTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/dropdown-menu.tsx\",\n    \"DropdownMenuTrigger\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,eAAe,IAAA,uXAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,6CACA;AAEG,MAAM,2BAA2B,IAAA,uXAAuB,EAC3D;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,6CACA;AAEG,MAAM,sBAAsB,IAAA,uXAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6CACA;AAEG,MAAM,oBAAoB,IAAA,uXAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6CACA;AAEG,MAAM,mBAAmB,IAAA,uXAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,6CACA;AAEG,MAAM,oBAAoB,IAAA,uXAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,6CACA;AAEG,MAAM,qBAAqB,IAAA,uXAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,6CACA;AAEG,MAAM,yBAAyB,IAAA,uXAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,wBAAwB,IAAA,uXAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,6CACA;AAEG,MAAM,wBAAwB,IAAA,uXAAuB,EACxD;IAAa,MAAM,IAAI,MAAM;AAA0P,GACvR,6CACA;AAEG,MAAM,uBAAuB,IAAA,uXAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,6CACA;AAEG,MAAM,kBAAkB,IAAA,uXAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,6CACA;AAEG,MAAM,yBAAyB,IAAA,uXAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,yBAAyB,IAAA,uXAAuB,EACzD;IAAa,MAAM,IAAI,MAAM;AAA4P,GACzR,6CACA;AAEG,MAAM,sBAAsB,IAAA,uXAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,6CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 336, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 344, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/components/ui/sidebar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Sidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"Sidebar\",\n);\nexport const SidebarContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarContent() from the server but SidebarContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarContent\",\n);\nexport const SidebarFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarFooter() from the server but SidebarFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarFooter\",\n);\nexport const SidebarGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroup() from the server but SidebarGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroup\",\n);\nexport const SidebarGroupAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupAction() from the server but SidebarGroupAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroupAction\",\n);\nexport const SidebarGroupContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupContent() from the server but SidebarGroupContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroupContent\",\n);\nexport const SidebarGroupLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupLabel() from the server but SidebarGroupLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarGroupLabel\",\n);\nexport const SidebarHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarHeader() from the server but SidebarHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarHeader\",\n);\nexport const SidebarInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInput() from the server but SidebarInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarInput\",\n);\nexport const SidebarInset = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInset() from the server but SidebarInset is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarInset\",\n);\nexport const SidebarMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenu() from the server but SidebarMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenu\",\n);\nexport const SidebarMenuAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuAction() from the server but SidebarMenuAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuAction\",\n);\nexport const SidebarMenuBadge = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuBadge() from the server but SidebarMenuBadge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuBadge\",\n);\nexport const SidebarMenuButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuButton() from the server but SidebarMenuButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuButton\",\n);\nexport const SidebarMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuItem() from the server but SidebarMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuItem\",\n);\nexport const SidebarMenuSkeleton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSkeleton() from the server but SidebarMenuSkeleton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSkeleton\",\n);\nexport const SidebarMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSub() from the server but SidebarMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSub\",\n);\nexport const SidebarMenuSubButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubButton() from the server but SidebarMenuSubButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSubButton\",\n);\nexport const SidebarMenuSubItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubItem() from the server but SidebarMenuSubItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarMenuSubItem\",\n);\nexport const SidebarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarProvider() from the server but SidebarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarProvider\",\n);\nexport const SidebarRail = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarRail() from the server but SidebarRail is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarRail\",\n);\nexport const SidebarSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarSeparator() from the server but SidebarSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarSeparator\",\n);\nexport const SidebarTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarTrigger() from the server but SidebarTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"SidebarTrigger\",\n);\nexport const useSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebar() from the server but useSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx <module evaluation>\",\n    \"useSidebar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,uXAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,2DACA;AAEG,MAAM,iBAAiB,IAAA,uXAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2DACA;AAEG,MAAM,gBAAgB,IAAA,uXAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2DACA;AAEG,MAAM,eAAe,IAAA,uXAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,2DACA;AAEG,MAAM,qBAAqB,IAAA,uXAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,2DACA;AAEG,MAAM,sBAAsB,IAAA,uXAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,2DACA;AAEG,MAAM,oBAAoB,IAAA,uXAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2DACA;AAEG,MAAM,gBAAgB,IAAA,uXAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,2DACA;AAEG,MAAM,eAAe,IAAA,uXAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,2DACA;AAEG,MAAM,eAAe,IAAA,uXAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,2DACA;AAEG,MAAM,cAAc,IAAA,uXAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,2DACA;AAEG,MAAM,oBAAoB,IAAA,uXAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2DACA;AAEG,MAAM,mBAAmB,IAAA,uXAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,2DACA;AAEG,MAAM,oBAAoB,IAAA,uXAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,2DACA;AAEG,MAAM,kBAAkB,IAAA,uXAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2DACA;AAEG,MAAM,sBAAsB,IAAA,uXAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,2DACA;AAEG,MAAM,iBAAiB,IAAA,uXAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2DACA;AAEG,MAAM,uBAAuB,IAAA,uXAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,2DACA;AAEG,MAAM,qBAAqB,IAAA,uXAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,2DACA;AAEG,MAAM,kBAAkB,IAAA,uXAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,2DACA;AAEG,MAAM,cAAc,IAAA,uXAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,2DACA;AAEG,MAAM,mBAAmB,IAAA,uXAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,2DACA;AAEG,MAAM,iBAAiB,IAAA,uXAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,2DACA;AAEG,MAAM,aAAa,IAAA,uXAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,2DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 473, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/components/ui/sidebar.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport const Sidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call Sidebar() from the server but Sidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"Sidebar\",\n);\nexport const SidebarContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarContent() from the server but SidebarContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarContent\",\n);\nexport const SidebarFooter = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarFooter() from the server but SidebarFooter is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarFooter\",\n);\nexport const SidebarGroup = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroup() from the server but SidebarGroup is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarGroup\",\n);\nexport const SidebarGroupAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupAction() from the server but SidebarGroupAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarGroupAction\",\n);\nexport const SidebarGroupContent = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupContent() from the server but SidebarGroupContent is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarGroupContent\",\n);\nexport const SidebarGroupLabel = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarGroupLabel() from the server but SidebarGroupLabel is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarGroupLabel\",\n);\nexport const SidebarHeader = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarHeader() from the server but SidebarHeader is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarHeader\",\n);\nexport const SidebarInput = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInput() from the server but SidebarInput is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarInput\",\n);\nexport const SidebarInset = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarInset() from the server but SidebarInset is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarInset\",\n);\nexport const SidebarMenu = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenu() from the server but SidebarMenu is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarMenu\",\n);\nexport const SidebarMenuAction = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuAction() from the server but SidebarMenuAction is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarMenuAction\",\n);\nexport const SidebarMenuBadge = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuBadge() from the server but SidebarMenuBadge is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarMenuBadge\",\n);\nexport const SidebarMenuButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuButton() from the server but SidebarMenuButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarMenuButton\",\n);\nexport const SidebarMenuItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuItem() from the server but SidebarMenuItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarMenuItem\",\n);\nexport const SidebarMenuSkeleton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSkeleton() from the server but SidebarMenuSkeleton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarMenuSkeleton\",\n);\nexport const SidebarMenuSub = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSub() from the server but SidebarMenuSub is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarMenuSub\",\n);\nexport const SidebarMenuSubButton = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubButton() from the server but SidebarMenuSubButton is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarMenuSubButton\",\n);\nexport const SidebarMenuSubItem = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarMenuSubItem() from the server but SidebarMenuSubItem is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarMenuSubItem\",\n);\nexport const SidebarProvider = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarProvider() from the server but SidebarProvider is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarProvider\",\n);\nexport const SidebarRail = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarRail() from the server but SidebarRail is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarRail\",\n);\nexport const SidebarSeparator = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarSeparator() from the server but SidebarSeparator is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarSeparator\",\n);\nexport const SidebarTrigger = registerClientReference(\n    function() { throw new Error(\"Attempted to call SidebarTrigger() from the server but SidebarTrigger is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"SidebarTrigger\",\n);\nexport const useSidebar = registerClientReference(\n    function() { throw new Error(\"Attempted to call useSidebar() from the server but useSidebar is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/ui/sidebar.tsx\",\n    \"useSidebar\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACvE;;AACO,MAAM,UAAU,IAAA,uXAAuB,EAC1C;IAAa,MAAM,IAAI,MAAM;AAA8N,GAC3P,uCACA;AAEG,MAAM,iBAAiB,IAAA,uXAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,uCACA;AAEG,MAAM,gBAAgB,IAAA,uXAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,uCACA;AAEG,MAAM,eAAe,IAAA,uXAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,uCACA;AAEG,MAAM,qBAAqB,IAAA,uXAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,uCACA;AAEG,MAAM,sBAAsB,IAAA,uXAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,uCACA;AAEG,MAAM,oBAAoB,IAAA,uXAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,uCACA;AAEG,MAAM,gBAAgB,IAAA,uXAAuB,EAChD;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,uCACA;AAEG,MAAM,eAAe,IAAA,uXAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,uCACA;AAEG,MAAM,eAAe,IAAA,uXAAuB,EAC/C;IAAa,MAAM,IAAI,MAAM;AAAwO,GACrQ,uCACA;AAEG,MAAM,cAAc,IAAA,uXAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,uCACA;AAEG,MAAM,oBAAoB,IAAA,uXAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,uCACA;AAEG,MAAM,mBAAmB,IAAA,uXAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,uCACA;AAEG,MAAM,oBAAoB,IAAA,uXAAuB,EACpD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,uCACA;AAEG,MAAM,kBAAkB,IAAA,uXAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uCACA;AAEG,MAAM,sBAAsB,IAAA,uXAAuB,EACtD;IAAa,MAAM,IAAI,MAAM;AAAsP,GACnR,uCACA;AAEG,MAAM,iBAAiB,IAAA,uXAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,uCACA;AAEG,MAAM,uBAAuB,IAAA,uXAAuB,EACvD;IAAa,MAAM,IAAI,MAAM;AAAwP,GACrR,uCACA;AAEG,MAAM,qBAAqB,IAAA,uXAAuB,EACrD;IAAa,MAAM,IAAI,MAAM;AAAoP,GACjR,uCACA;AAEG,MAAM,kBAAkB,IAAA,uXAAuB,EAClD;IAAa,MAAM,IAAI,MAAM;AAA8O,GAC3Q,uCACA;AAEG,MAAM,cAAc,IAAA,uXAAuB,EAC9C;IAAa,MAAM,IAAI,MAAM;AAAsO,GACnQ,uCACA;AAEG,MAAM,mBAAmB,IAAA,uXAAuB,EACnD;IAAa,MAAM,IAAI,MAAM;AAAgP,GAC7Q,uCACA;AAEG,MAAM,iBAAiB,IAAA,uXAAuB,EACjD;IAAa,MAAM,IAAI,MAAM;AAA4O,GACzQ,uCACA;AAEG,MAAM,aAAa,IAAA,uXAAuB,EAC7C;IAAa,MAAM,IAAI,MAAM;AAAoO,GACjQ,uCACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 602, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 676, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/fuctions/api/client.ts"],"sourcesContent":["// fuctions/api/client.ts\r\nimport axios from \"axios\";\r\n\r\n// Create an axios instance with base URL and default config\r\nconst apiClient = axios.create({\r\n  baseURL: process.env.NEXT_PUBLIC_API_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Accept: \"application/json\",\r\n  },\r\n  withCredentials: true, // equivalent to fetch's credentials: \"include\"\r\n});\r\n\r\n// Define types\r\ninterface Userdata {\r\n  email: string;\r\n  first_name: string;\r\n  is_active: boolean;\r\n  is_verified: boolean;\r\n  last_name: string;\r\n  role: string;\r\n  send_welcome_email: boolean;\r\n}\r\n\r\ninterface LoginResponse {\r\n  access_token: string;\r\n  token_type: string;\r\n  expires_in: number;\r\n}\r\n\r\ninterface RefreshResponse {\r\n  access_token: string;\r\n  expires_in: number;\r\n}\r\n\r\nexport const client = {\r\n  // Login\r\n  async Login(email: string, password: string): Promise<LoginResponse> {\r\n    console.log(\"Email client\", email);\r\n    console.log(\"Password\", password);\r\n\r\n    try {\r\n      const response = await apiClient.post<LoginResponse>(\r\n        \"/users/login\",\r\n        new URLSearchParams({\r\n          grant_type: \"password\",\r\n          username: email,\r\n          password: password,\r\n          scope: \"\",\r\n          client_id: \"string\",\r\n          client_secret: \"********\",\r\n        }).toString(),\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n          },\r\n        }\r\n      );\r\n      console.log(\"ssss\", response.data);\r\n      return response.data;\r\n    } catch (error: any) {\r\n      if (error.response) {\r\n        // Server responded with error status\r\n        throw new Error(\r\n          error.response.data?.detail ||\r\n            `Login failed: ${error.response.status}`\r\n        );\r\n      } else if (error.request) {\r\n        throw new Error(\"No response from server\");\r\n      } else {\r\n        throw new Error(\"Login request setup failed\");\r\n      }\r\n    }\r\n  },\r\n\r\n  // Get User\r\n  async GetUser(token: string) {\r\n    try {\r\n      const response = await apiClient.get(\"/users/me\", {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.detail || \"Failed to fetch user\");\r\n    }\r\n  },\r\n\r\n  // Refresh Token\r\n  async refreshAccessToken() {\r\n    try {\r\n      const response = await apiClient.post<RefreshResponse>(\"/users/refresh\");\r\n      return {\r\n        access_token: response.data.access_token,\r\n        expires_at: Math.floor(Date.now() / 1000 + response.data.expires_in),\r\n      };\r\n    } catch (error: any) {\r\n      console.error(\"Error refreshing token:\", error);\r\n      throw new Error(\"RefreshAccessTokenError\");\r\n    }\r\n  },\r\n\r\n  // Reset Password\r\n  async resetPassword(email: string) {\r\n    console.log(\"|Email: reset\", email);\r\n    try {\r\n      const response = await apiClient.post(\"/users/request-password-reset\", {\r\n        email,\r\n      });\r\n      return response.data;\r\n    } catch (error: any) {\r\n      throw new Error(\r\n        error.response?.data?.detail ||\r\n          `Failed to send reset email: ${\r\n            error.response?.status || \"network error\"\r\n          }`\r\n      );\r\n    }\r\n  },\r\n\r\n  // Change Password\r\n  async changePassword(\r\n    current_password: string,\r\n    new_password: string,\r\n    token: string\r\n  ) {\r\n    try {\r\n      const response = await apiClient.post(\r\n        \"/users/change-password\",\r\n        { current_password, new_password },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      return response.data;\r\n    } catch (error: any) {\r\n      console.error(\"Error changing password:\", error);\r\n      throw new Error(\r\n        error.response?.data?.detail || \"Failed to change password\"\r\n      );\r\n    }\r\n  },\r\n\r\n  // Create User (Admin)\r\n  async createUser(data: Userdata, token: string) {\r\n    try {\r\n      const response = await apiClient.post(\"/admin/users\", data, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n      return response.data;\r\n    } catch (error: any) {\r\n      throw new Error(error.response?.data?.detail || \"Failed to create user\");\r\n    }\r\n  },\r\n};\r\n"],"names":[],"mappings":"AAAA,yBAAyB;;;;;AACzB;;AAEA,4DAA4D;AAC5D,MAAM,YAAY,mMAAK,CAAC,MAAM,CAAC;IAC7B,OAAO;IACP,SAAS;QACP,gBAAgB;QAChB,QAAQ;IACV;IACA,iBAAiB;AACnB;AAwBO,MAAM,SAAS;IACpB,QAAQ;IACR,MAAM,OAAM,KAAa,EAAE,QAAgB;QACzC,QAAQ,GAAG,CAAC,gBAAgB;QAC5B,QAAQ,GAAG,CAAC,YAAY;QAExB,IAAI;YACF,MAAM,WAAW,MAAM,UAAU,IAAI,CACnC,gBACA,IAAI,gBAAgB;gBAClB,YAAY;gBACZ,UAAU;gBACV,UAAU;gBACV,OAAO;gBACP,WAAW;gBACX,eAAe;YACjB,GAAG,QAAQ,IACX;gBACE,SAAS;oBACP,gBAAgB;gBAClB;YACF;YAEF,QAAQ,GAAG,CAAC,QAAQ,SAAS,IAAI;YACjC,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAY;YACnB,IAAI,MAAM,QAAQ,EAAE;gBAClB,qCAAqC;gBACrC,MAAM,IAAI,MACR,MAAM,QAAQ,CAAC,IAAI,EAAE,UACnB,CAAC,cAAc,EAAE,MAAM,QAAQ,CAAC,MAAM,EAAE;YAE9C,OAAO,IAAI,MAAM,OAAO,EAAE;gBACxB,MAAM,IAAI,MAAM;YAClB,OAAO;gBACL,MAAM,IAAI,MAAM;YAClB;QACF;IACF;IAEA,WAAW;IACX,MAAM,SAAQ,KAAa;QACzB,IAAI;YACF,MAAM,WAAW,MAAM,UAAU,GAAG,CAAC,aAAa;gBAChD,SAAS;oBACP,eAAe,CAAC,OAAO,EAAE,OAAO;gBAClC;YACF;YACA,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAY;YACnB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,UAAU;QAClD;IACF;IAEA,gBAAgB;IAChB,MAAM;QACJ,IAAI;YACF,MAAM,WAAW,MAAM,UAAU,IAAI,CAAkB;YACvD,OAAO;gBACL,cAAc,SAAS,IAAI,CAAC,YAAY;gBACxC,YAAY,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,OAAO,SAAS,IAAI,CAAC,UAAU;YACrE;QACF,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,2BAA2B;YACzC,MAAM,IAAI,MAAM;QAClB;IACF;IAEA,iBAAiB;IACjB,MAAM,eAAc,KAAa;QAC/B,QAAQ,GAAG,CAAC,iBAAiB;QAC7B,IAAI;YACF,MAAM,WAAW,MAAM,UAAU,IAAI,CAAC,iCAAiC;gBACrE;YACF;YACA,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAY;YACnB,MAAM,IAAI,MACR,MAAM,QAAQ,EAAE,MAAM,UACpB,CAAC,4BAA4B,EAC3B,MAAM,QAAQ,EAAE,UAAU,iBAC1B;QAER;IACF;IAEA,kBAAkB;IAClB,MAAM,gBACJ,gBAAwB,EACxB,YAAoB,EACpB,KAAa;QAEb,IAAI;YACF,MAAM,WAAW,MAAM,UAAU,IAAI,CACnC,0BACA;gBAAE;gBAAkB;YAAa,GACjC;gBACE,SAAS;oBACP,eAAe,CAAC,OAAO,EAAE,OAAO;gBAClC;YACF;YAEF,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAY;YACnB,QAAQ,KAAK,CAAC,4BAA4B;YAC1C,MAAM,IAAI,MACR,MAAM,QAAQ,EAAE,MAAM,UAAU;QAEpC;IACF;IAEA,sBAAsB;IACtB,MAAM,YAAW,IAAc,EAAE,KAAa;QAC5C,IAAI;YACF,MAAM,WAAW,MAAM,UAAU,IAAI,CAAC,gBAAgB,MAAM;gBAC1D,SAAS;oBACP,eAAe,CAAC,OAAO,EAAE,OAAO;gBAClC;YACF;YACA,OAAO,SAAS,IAAI;QACtB,EAAE,OAAO,OAAY;YACnB,MAAM,IAAI,MAAM,MAAM,QAAQ,EAAE,MAAM,UAAU;QAClD;IACF;AACF","debugId":null}},
    {"offset": {"line": 796, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/auth.ts"],"sourcesContent":["import NextAuth, { CredentialsSignin } from \"next-auth\";\r\nimport Credentials from \"next-auth/providers/credentials\";\r\nimport { client } from \"./fuctions/api/client\";\r\n\r\n// Extend NextAuth types\r\ndeclare module \"next-auth\" {\r\n  interface User {\r\n    first_name: string;\r\n    last_name: string;\r\n    id: string;\r\n    email: string;\r\n    emailVerified: Date | null;\r\n    is_active: boolean;\r\n    is_verified: boolean;\r\n    roles: string[];\r\n    permissions: string[];\r\n    access_token: string;\r\n    expires_at: number;\r\n  }\r\n\r\n  interface Session {\r\n    access_token: string;\r\n    error?: string;\r\n  }\r\n}\r\n\r\nexport class InvalidLoginError extends CredentialsSignin {\r\n  constructor(message: string) {\r\n    super(message);\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nexport const { handlers, signIn, signOut, auth } = NextAuth({\r\n  providers: [\r\n    Credentials({\r\n      async authorize(credentials) {\r\n        const { email, password } = credentials as {\r\n          email: string;\r\n          password: string;\r\n        };\r\n\r\n        try {\r\n          // Login → returns tokens\r\n          const data = await client.Login(email, password);\r\n\r\n          // Fetch user profile with access_token\r\n          const user = await client.GetUser(data.access_token);\r\n\r\n          console.log(\"User\", user);\r\n          return {\r\n            ...user,\r\n            access_token: data.access_token,\r\n            expires_at: Math.floor(Date.now() / 1000 + data.expires_in), // expiry in seconds\r\n          };\r\n        } catch (error: any) {\r\n          throw new InvalidLoginError(error.message);\r\n        }\r\n      },\r\n    }),\r\n  ],\r\n\r\n  callbacks: {\r\n    // Runs whenever token is created/updated\r\n    async jwt({ token, user }) {\r\n      // Initial login → attach tokens + user info\r\n\r\n      if (user) {\r\n        return {\r\n          ...token,\r\n          id: user.id,\r\n          email: user.email,\r\n          firstName: user.first_name,\r\n          lastName: user.last_name,\r\n          roles: user.roles,\r\n          is_active: user.is_active,\r\n          is_verified: user.is_verified,\r\n          permissions: user.permissions,\r\n          access_token: user.access_token,\r\n          expires_at: user.expires_at,\r\n        };\r\n      }\r\n\r\n      // If token still valid → return it\r\n      if (Date.now() < (token.expires_at as number) * 1000) {\r\n        return token;\r\n      }\r\n      // signOut();\r\n      // Otherwise refresh\r\n      const refreshed = await client.refreshAccessToken();\r\n\r\n      if (refreshed.error) {\r\n        return { ...token, error: \"RefreshAccessTokenError\" };\r\n      }\r\n\r\n      return {\r\n        ...token,\r\n        access_token: refreshed.access_token,\r\n        expires_at: refreshed.expires_at,\r\n      };\r\n    },\r\n\r\n    // What's sent to the client (session)\r\n    async session({ session, token }) {\r\n      session.user = {\r\n        id: token.id as string,\r\n        email: token.email as string,\r\n        emailVerified: (token.is_verified as boolean) ? new Date() : null,\r\n        first_name: token.firstName as string, // note: you stored it as 'firstName' in JWT\r\n        last_name: token.lastName as string,\r\n        is_active: token.is_active as boolean,\r\n        is_verified: token.is_verified as boolean,\r\n        roles: token.roles as string[],\r\n        permissions: token.permissions as string[],\r\n        access_token: token.access_token as string,\r\n        expires_at: token.expires_at as number,\r\n      };\r\n\r\n      session.access_token = token.access_token as string;\r\n      session.error = token.error as string | undefined;\r\n\r\n      return session;\r\n    },\r\n    // async session({ session, token }) {\r\n    //   session.user = {\r\n    //     id: token.id as string,\r\n    //     email: token.email as string,\r\n    //     emailVerified: null,\r\n    //     roles: token.roles as string[],\r\n    //     permissions: token.permissions as string[],\r\n    //     access_token: token.access_token as string,\r\n    //     expires_at: token.expires_at as number,\r\n    //   };\r\n\r\n    //   session.access_token = token.access_token as string;\r\n    //   session.error = token.error as string | undefined;\r\n\r\n    //   return session;\r\n    // },\r\n  },\r\n\r\n  pages: {\r\n    signIn: \"/signin\",\r\n  },\r\n});\r\n"],"names":[],"mappings":";;;;;;;;;;;;AAAA;AAAA;AACA;AAAA;AACA;;;;AAwBO,MAAM,0BAA0B,yNAAiB;IACtD,YAAY,OAAe,CAAE;QAC3B,KAAK,CAAC;QACN,IAAI,CAAC,OAAO,GAAG;IACjB;AACF;AAEO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAA,4QAAQ,EAAC;IAC1D,WAAW;QACT,IAAA,iOAAW,EAAC;YACV,MAAM,WAAU,WAAW;gBACzB,MAAM,EAAE,KAAK,EAAE,QAAQ,EAAE,GAAG;gBAK5B,IAAI;oBACF,yBAAyB;oBACzB,MAAM,OAAO,MAAM,mIAAM,CAAC,KAAK,CAAC,OAAO;oBAEvC,uCAAuC;oBACvC,MAAM,OAAO,MAAM,mIAAM,CAAC,OAAO,CAAC,KAAK,YAAY;oBAEnD,QAAQ,GAAG,CAAC,QAAQ;oBACpB,OAAO;wBACL,GAAG,IAAI;wBACP,cAAc,KAAK,YAAY;wBAC/B,YAAY,KAAK,KAAK,CAAC,KAAK,GAAG,KAAK,OAAO,KAAK,UAAU;oBAC5D;gBACF,EAAE,OAAO,OAAY;oBACnB,MAAM,IAAI,kBAAkB,MAAM,OAAO;gBAC3C;YACF;QACF;KACD;IAED,WAAW;QACT,yCAAyC;QACzC,MAAM,KAAI,EAAE,KAAK,EAAE,IAAI,EAAE;YACvB,4CAA4C;YAE5C,IAAI,MAAM;gBACR,OAAO;oBACL,GAAG,KAAK;oBACR,IAAI,KAAK,EAAE;oBACX,OAAO,KAAK,KAAK;oBACjB,WAAW,KAAK,UAAU;oBAC1B,UAAU,KAAK,SAAS;oBACxB,OAAO,KAAK,KAAK;oBACjB,WAAW,KAAK,SAAS;oBACzB,aAAa,KAAK,WAAW;oBAC7B,aAAa,KAAK,WAAW;oBAC7B,cAAc,KAAK,YAAY;oBAC/B,YAAY,KAAK,UAAU;gBAC7B;YACF;YAEA,mCAAmC;YACnC,IAAI,KAAK,GAAG,KAAK,AAAC,MAAM,UAAU,GAAc,MAAM;gBACpD,OAAO;YACT;YACA,aAAa;YACb,oBAAoB;YACpB,MAAM,YAAY,MAAM,mIAAM,CAAC,kBAAkB;YAEjD,IAAI,UAAU,KAAK,EAAE;gBACnB,OAAO;oBAAE,GAAG,KAAK;oBAAE,OAAO;gBAA0B;YACtD;YAEA,OAAO;gBACL,GAAG,KAAK;gBACR,cAAc,UAAU,YAAY;gBACpC,YAAY,UAAU,UAAU;YAClC;QACF;QAEA,sCAAsC;QACtC,MAAM,SAAQ,EAAE,OAAO,EAAE,KAAK,EAAE;YAC9B,QAAQ,IAAI,GAAG;gBACb,IAAI,MAAM,EAAE;gBACZ,OAAO,MAAM,KAAK;gBAClB,eAAe,AAAC,MAAM,WAAW,GAAe,IAAI,SAAS;gBAC7D,YAAY,MAAM,SAAS;gBAC3B,WAAW,MAAM,QAAQ;gBACzB,WAAW,MAAM,SAAS;gBAC1B,aAAa,MAAM,WAAW;gBAC9B,OAAO,MAAM,KAAK;gBAClB,aAAa,MAAM,WAAW;gBAC9B,cAAc,MAAM,YAAY;gBAChC,YAAY,MAAM,UAAU;YAC9B;YAEA,QAAQ,YAAY,GAAG,MAAM,YAAY;YACzC,QAAQ,KAAK,GAAG,MAAM,KAAK;YAE3B,OAAO;QACT;IAiBF;IAEA,OAAO;QACL,QAAQ;IACV;AACF","debugId":null}},
    {"offset": {"line": 910, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/fuctions/auth-guard.ts"],"sourcesContent":["// lib/auth-guard.ts\r\nimport { auth } from \"@/auth\";\r\nimport { redirect } from \"next/navigation\";\r\n\r\nexport async function requireAuth() {\r\n  const session = await auth();\r\n  if (!session?.user) {\r\n    redirect(\"/Signin\");\r\n  }\r\n  return session.user;\r\n}\r\n"],"names":[],"mappings":"AAAA,oBAAoB;;;;;AACpB;AACA;AAAA;;;AAEO,eAAe;IACpB,MAAM,UAAU,MAAM,IAAA,4GAAI;IAC1B,IAAI,CAAC,SAAS,MAAM;QAClB,IAAA,gTAAQ,EAAC;IACX;IACA,OAAO,QAAQ,IAAI;AACrB","debugId":null}},
    {"offset": {"line": 931, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/components/Navbar.tsx"],"sourcesContent":["import { LogOut, User } from \"lucide-react\";\r\nimport { Avatar, AvatarFallback, AvatarImage } from \"./ui/avatar\";\r\nimport { Button } from \"./ui/button\";\r\nimport {\r\n  DropdownMenu,\r\n  DropdownMenuContent,\r\n  DropdownMenuItem,\r\n  DropdownMenuLabel,\r\n  DropdownMenuSeparator,\r\n  DropdownMenuTrigger,\r\n} from \"./ui/dropdown-menu\";\r\nimport { SidebarTrigger } from \"./ui/sidebar\";\r\nimport { auth, signOut } from \"@/auth\";\r\nimport Link from \"next/link\";\r\nimport { redirect } from \"next/navigation\";\r\nimport { requireAuth } from \"@/fuctions/auth-guard\";\r\n\r\nexport default async function Navbar() {\r\n  const user = await requireAuth();\r\n  return (\r\n    <>\r\n      <div className=\"h-16 border-b border-bran-secondary flex justify-between items-center px-4\">\r\n        <div className=\"bg-  flex justify-center items-center\">\r\n          {\" \"}\r\n          <SidebarTrigger className=\"ml-\" />\r\n        </div>\r\n        <div className=\"\">\r\n          {\" \"}\r\n          <DropdownMenu>\r\n            <DropdownMenuTrigger asChild>\r\n              <Button variant=\"ghost\" className=\"relative h-8 w-8 rounded-full\">\r\n                <Avatar className=\"h-8 w-8\">\r\n                  <AvatarImage src={\"/avatar.png\"} />\r\n                  <AvatarFallback className=\"bg-primary text-primary-foreground\">\r\n                    A\r\n                  </AvatarFallback>\r\n                </Avatar>\r\n              </Button>\r\n            </DropdownMenuTrigger>\r\n            <DropdownMenuContent\r\n              className=\"w-56 bg-popover border-bran-secondary p-2\"\r\n              align=\"end\"\r\n              forceMount\r\n            >\r\n              <DropdownMenuLabel className=\"font-normal\">\r\n                <div className=\"flex flex-col space-y-1\">\r\n                  <p className=\"text-sm font-medium leading-none\">\r\n                    {user!.first_name}\r\n                  </p>\r\n                  <p className=\"text-xs leading-none text-muted-foreground\">\r\n                    {user!.email}\r\n                  </p>\r\n                </div>\r\n              </DropdownMenuLabel>\r\n              <DropdownMenuSeparator />\r\n              <DropdownMenuItem\r\n                className=\"hover:to-brand-primary font-medium py-3\"\r\n                asChild\r\n              >\r\n                <Link className=\"pl-6\" href={\"/profile\"}>\r\n                  Profile\r\n                </Link>\r\n              </DropdownMenuItem>\r\n              <DropdownMenuItem className=\"\">\r\n                <form\r\n                  action={async () => {\r\n                    \"use server\";\r\n                    await signOut();\r\n                  }}\r\n                >\r\n                  <Button\r\n                    className=\"hover:to-brand-primary hover:font-medium py-2\"\r\n                    variant={\"ghost\"}\r\n                    type=\"submit\"\r\n                  >\r\n                    <LogOut />\r\n                    Sign Out\r\n                  </Button>\r\n                </form>\r\n              </DropdownMenuItem>\r\n            </DropdownMenuContent>\r\n          </DropdownMenu>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AAQA;AACA;AACA;AAEA;;;;;;;;;;;MAkD0B,uCAAR;IAEE,MAAM,IAAA,+GAAO;AACf;AAHQ,8VAAA;AAhDX,eAAe;IAC5B,MAAM,OAAO,MAAM,IAAA,wIAAW;IAC9B,qBACE;kBACE,cAAA,6VAAC;YAAI,WAAU;;8BACb,6VAAC;oBAAI,WAAU;;wBACZ;sCACD,6VAAC,8IAAc;4BAAC,WAAU;;;;;;;;;;;;8BAE5B,6VAAC;oBAAI,WAAU;;wBACZ;sCACD,6VAAC,qJAAY;;8CACX,6VAAC,4JAAmB;oCAAC,OAAO;8CAC1B,cAAA,6VAAC,qIAAM;wCAAC,SAAQ;wCAAQ,WAAU;kDAChC,cAAA,6VAAC,qIAAM;4CAAC,WAAU;;8DAChB,6VAAC,0IAAW;oDAAC,KAAK;;;;;;8DAClB,6VAAC,6IAAc;oDAAC,WAAU;8DAAqC;;;;;;;;;;;;;;;;;;;;;;8CAMrE,6VAAC,4JAAmB;oCAClB,WAAU;oCACV,OAAM;oCACN,UAAU;;sDAEV,6VAAC,0JAAiB;4CAAC,WAAU;sDAC3B,cAAA,6VAAC;gDAAI,WAAU;;kEACb,6VAAC;wDAAE,WAAU;kEACV,KAAM,UAAU;;;;;;kEAEnB,6VAAC;wDAAE,WAAU;kEACV,KAAM,KAAK;;;;;;;;;;;;;;;;;sDAIlB,6VAAC,8JAAqB;;;;;sDACtB,6VAAC,yJAAgB;4CACf,WAAU;4CACV,OAAO;sDAEP,cAAA,6VAAC,sRAAI;gDAAC,WAAU;gDAAO,MAAM;0DAAY;;;;;;;;;;;sDAI3C,6VAAC,yJAAgB;4CAAC,WAAU;sDAC1B,cAAA,6VAAC;gDACC,QAAQ;0DAKR,cAAA,6VAAC,qIAAM;oDACL,WAAU;oDACV,SAAS;oDACT,MAAK;;sEAEL,6VAAC,wSAAM;;;;;wDAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW9B","debugId":null}},
    {"offset": {"line": 1149, "column": 0}, "map": {"version":3,"sources":["file:///G:/projects/backend/appointment_app/frontend/app/%28dashboard%29/layout.tsx"],"sourcesContent":["import { AppSidebar } from \"@/components/app-sidebar\";\r\nimport Navbar from \"@/components/Navbar\";\r\nimport { Toaster } from \"react-hot-toast\";\r\nimport {\r\n  SidebarInset,\r\n  SidebarProvider,\r\n  SidebarTrigger,\r\n} from \"@/components/ui/sidebar\";\r\n\r\nexport default function LayoutDashboard({\r\n  children,\r\n}: {\r\n  children: React.ReactNode;\r\n}) {\r\n  return (\r\n    <>\r\n      <SidebarProvider>\r\n        <AppSidebar />\r\n        <SidebarInset>\r\n          <main className=\"\">\r\n            <Navbar />\r\n            {children}\r\n            <Toaster />\r\n          </main>\r\n        </SidebarInset>\r\n      </SidebarProvider>\r\n    </>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AACA;;;;;;AAMe,SAAS,gBAAgB,EACtC,QAAQ,EAGT;IACC,qBACE;kBACE,cAAA,6VAAC,+IAAe;;8BACd,6VAAC,2IAAU;;;;;8BACX,6VAAC,4IAAY;8BACX,cAAA,6VAAC;wBAAK,WAAU;;0CACd,6VAAC,gIAAM;;;;;4BACN;0CACD,6VAAC,2QAAO;;;;;;;;;;;;;;;;;;;;;;;AAMpB","debugId":null}}]
}